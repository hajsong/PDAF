#!/bin/bash
#
#  Build options for intel fortran compiler (ifort) & gnu C compiler (gcc) on Linux AMD64 platform

#  Tested on svante (FC 24) with Intel Fortran compiler 17.0.3 (20170404)
#                                    and GNU C compiler 6.3.1  (20161221)
#
# MPI : Tested svante, with OpenMPI 1.10.5
# ==> DON'T FORGET to set environment variable MPI_INC_DIR to the include
#     directory of your MPI implementation

if test "x$MPI" = xtrue ; then
  FC=${FC:=mpif77}
  F90C=${F90C:=mpif90}
  LINK="$F90C -shared-intel -no-ipo"
else
  FC=ifort
  F90C=ifort
  LINK="$F90C -shared-intel"
fi
CC=gcc

DEFINES='-DWORDLENGTH=4 -DUSE_PDAF' 
F90FIXEDFORMAT='-fixed -Tf'
EXTENDED_SRC_FLAG='-132'
GET_FC_VERSION="--version"
OMPFLAG='-qopenmp'

NOOPTFLAGS='-O0 -g'
NOOPTFILES=''

#if test "x$GENERIC" != x ; then
#    PROCF=-axSSE4.2,SSE4.1,SSSE3,SSE3,SSE2
#else
#    PROCF=-xHost
#fi

CFLAGS='-O0'
FFLAGS="$FFLAGS -m64 -convert big_endian -assume byterecl"
#- for big setups, compile & link with "-fPIC" or set memory-model to "medium":
#CFLAGS="$CFLAGS -fPIC"
#FFLAGS="$FFLAGS -fPIC"
#-  with FC 19, need to use this without -fPIC (which cancels -mcmodel option):
 CFLAGS="$CFLAGS -mcmodel=medium"
 FFLAGS="$FFLAGS -mcmodel=medium"
#- might want to use '-r8' for fizhi pkg:
#FFLAGS="$FFLAGS -r8"

if test "x$IEEE" = x ; then     #- with optimisation:
    FOPTIM="-O2 -align -ip -fp-model source $PROCF"
else
  if test "x$DEVEL" = x ; then  #- no optimisation + IEEE :
    FOPTIM="-O0 -fp-model source -noalign $PROCF"
  else                          #- development/check options:
   #FFLAGS="$FFLAGS -debug all -debug-parameters all -fp-model strict"
    FOPTIM="-O0 -noalign -g -traceback $PROCF"
    NOOPTFLAGS=$FOPTIM
    NOOPTFILES='adread_adwrite.F mdsio_rw_field.F mdsio_rw_slice.F'
    FOPTIM="$FOPTIM -warn all -warn nounused"
    FOPTIM="$FOPTIM -fpe0 -ftz -fp-stack-check -check all -ftrapuv"
  fi
fi

F90FLAGS=$FFLAGS
F90OPTIM=$FOPTIM

PDAF="/home/hajsong/PDAF/PDAF-D_V1.16_ifort"
#MKLLIB="-Wl,--start-group ${MKLROOT}/lib/intel64/libmkl_gf_lp64.a ${MKLROOT}/lib/intel64/libmkl_sequential.a ${MKLROOT}/lib/intel64/libmkl_core.a -Wl,--end-group -lpthread -lm -ldl"
MKLLIB="-Wl,--start-group  ${MKLROOT}/lib/intel64/libmkl_intel_lp64.a ${MKLROOT}/lib/intel64/libmkl_intel_thread.a ${MKLROOT}/lib/intel64/libmkl_core.a -Wl,--end-group -qopenmp -lpthread -lm"

INCLUDEDIRS="${NETCDF_ROOT}/include"
INCLUDES="-I${NETCDF_ROOT}/include -I/usr/local/intel/mkl/include -I${PDAF}/include"
#LIBS="-L${NETCDF_ROOT}/lib64 -L${NETCDF_ROOT}/lib -L${PDAF}/lib -lpdaf-d"
LIBS="-L${NETCDF_ROOT}/lib64 -L${NETCDF_ROOT}/lib -L${PDAF}/lib -lpdaf-d ${MKLLIB}"

if [ -n "$MPI_INC_DIR" -a "x$MPI" = xtrue ] ; then
    INCLUDES="$INCLUDES -I$MPI_INC_DIR"
    INCLUDEDIRS="$INCLUDEDIRS $MPI_INC_DIR"
    #- used for parallel (MPI) DIVA
    MPIINCLUDEDIR="$MPI_INC_DIR"
   #MPI_HEADER_FILES='mpif.h mpiof.h'
fi
